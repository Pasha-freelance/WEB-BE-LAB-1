{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo list",
    "description": "Todo list",
    "termsOfService": "https://www.google.com/policies/terms/",
    "contact": {
      "email": "creudnitsky200206@gmail.com"
    },
    "license": {
      "name": "BSD License"
    },
    "version": "v1"
  },
  "security": [
    {
      "Basic": []
    }
  ],
  "paths": {
    "/api/add-todo/{profile_id}": {
      "post": {
        "operationId": "api_add-todo_create",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/ToDo"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDo"
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "profile_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/all-todos/{profile_id}": {
      "get": {
        "operationId": "api_all-todos_read",
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "profile_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/auth/login/": {
      "post": {
        "operationId": "api_auth_login_create",
        "description": "",
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/auth/register/": {
      "post": {
        "operationId": "api_auth_register_create",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/Person"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": []
    },
    "/api/delete-todo/{identifier}": {
      "delete": {
        "operationId": "api_delete-todo_delete",
        "description": "",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/edit-todo/{identifier}": {
      "post": {
        "operationId": "api_edit-todo_create",
        "description": "",
        "requestBody": {
          "$ref": "#/components/requestBodies/ToDo"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToDo"
                }
              }
            }
          }
        },
        "tags": [
          "api"
        ]
      },
      "parameters": [
        {
          "name": "identifier",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/users/": {
      "get": {
        "operationId": "users_list",
        "description": "API endpoint that allows person to be viewed or edited.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "users_create",
        "description": "API endpoint that allows person to be viewed or edited.",
        "requestBody": {
          "$ref": "#/components/requestBodies/Person"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": []
    },
    "/users/{id}/": {
      "get": {
        "operationId": "users_read",
        "description": "API endpoint that allows person to be viewed or edited.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "users_update",
        "description": "API endpoint that allows person to be viewed or edited.",
        "requestBody": {
          "$ref": "#/components/requestBodies/Person"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "users_partial_update",
        "description": "API endpoint that allows person to be viewed or edited.",
        "requestBody": {
          "$ref": "#/components/requestBodies/Person"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "users_delete",
        "description": "API endpoint that allows person to be viewed or edited.",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this Person.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "components": {
    "requestBodies": {
      "ToDo": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ToDo"
            }
          }
        },
        "required": true
      },
      "Person": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Person"
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
      "Basic": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "ToDo": {
        "required": [
          "identifier",
          "description",
          "deadline",
          "owner"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "format": "uri",
            "readOnly": true
          },
          "identifier": {
            "title": "Identifier",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "description": {
            "title": "Todo description",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "deadline": {
            "title": "Deadline",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "owner": {
            "title": "Owner",
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Person": {
        "required": [
          "username",
          "email",
          "birthdate"
        ],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "type": "string",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150,
            "minLength": 1
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "maxLength": 255,
            "minLength": 1
          },
          "birthdate": {
            "title": "Birthdate",
            "type": "string",
            "format": "date"
          },
          "profileId": {
            "title": "ProfileId",
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "first_name": {
            "title": "First name",
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "title": "Last name",
            "type": "string",
            "maxLength": 150
          }
        }
      }
    }
  }
}